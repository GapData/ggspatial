% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/osmggplot.R
\name{geom_osm}
\alias{geom_osm}
\title{A ggplot geometry for OSM imagery}
\usage{
geom_osm(obj = NULL, zoomin = 0, zoom = NULL, type = "osm",
  forcedownload = FALSE, cachedir = NULL, epsg = NULL,
  projection = NULL, ...)
}
\arguments{
\item{obj}{An object like in \link{osm.raster}: a bounding box or Spatial* object. Note that
bounding boxes are always specified in lat/lon coordinates.}

\item{zoomin}{The amount by which to adjust the automatically calculated zoom (or
manually specified if the \code{zoom} parameter is passed). Use +1 to zoom in, or -1 to zoom out.}

\item{zoom}{Manually specify the zoom level (not recommended; adjust \code{zoomin} instead.}

\item{type}{A map type; one of that returned by \link{osm.types}. User defined types are possible
by defining \code{tile.url.TYPENAME <- function(xtile, ytile, zoom){}} and passing TYPENAME
as the \code{type} argument.}

\item{forcedownload}{\code{TRUE} if cached tiles should be re-downloaded. Useful if
some tiles are corrupted.}

\item{cachedir}{The directory in which tiles should be cached. Defaults to \code{getwd()/rosm.cache}.}

\item{epsg}{The epsg code of the projection of the coordinates being plotted by other geoms.
This defaults to spherical mercator or EPSG:3857.}

\item{projection}{A map projection in which to reproject the RasterStack as generated by \code{CRS()} or
\code{Spatial*@proj4string}. If a \code{Spatial*} object is passed as the first argument,
this argument will be ignored. Use \code{epsg} as a short form.}

\item{...}{Agruments passed on to \code{geom_raster()}}
}
\value{
A \code{geom_raster} with colour data from the tiles.
}
\description{
An experimental function returning a geom_raster representing the tile data such that it
can be plotted as a \code{ggplot2} layer. Should probably be used with \code{coord_fixed}.
Note that this does not scale the aspect like the \code{sp} package and will only work with
other datasets if they are provided in lat/lon (they can be projected using \link{geom_spatial}
without problems).
}
\examples{
\donttest{
library(prettymapr)
library(ggplot2)
ns <- searchbbox("Nova Scotia")
cities <- geocode(c("Wolfville, NS", "Windsor, NS", "Halifax, NS"))
ggplot(cities, aes(x=lon, y=lat, col=id)) +
    geom_osm(epsg=3857) + geom_spatial(toepsg=3857) +
    coord_fixed()
library(maptools)
data(wrld_simpl)
ep <- wrld_simpl[wrld_simpl$ISO2 \%in\% c("GB", "IE", "FR", "DE",
   "IT", "CH", "SE", "NO", "FI"),]
ggplot() + geom_osm() +
   geom_spatial(ep, toepsg=3857, fill=NA, col="black") +
   coord_fixed()
ggplot() + geom_osm(zoomin=-3) +
   geom_spatial(ep, toepsg=3857, fill=NA, col="black") +
   coord_fixed() + facet_wrap(~NAME, scales="free")
ggplot() + geom_osm(ns) + coord_fixed()

ggplot(data.frame(t(ns)), aes(x=x, y=y)) +
  geom_osm(type="osm", zoomin=-1) +
  geom_point() + coord_fixed()
}

}

